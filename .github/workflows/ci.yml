name: SysML MVP CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job 1: 后端测试
  backend-test:
    name: 后端测试
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 缓存Maven依赖
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: 编译后端
      run: |
        cd backend
        mvn clean compile
        
    - name: 运行后端测试
      run: |
        cd backend
        mvn test --batch-mode --fail-at-end
        
    - name: 生成测试报告
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: 后端测试报告
        path: backend/target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: 上传测试结果
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: backend-test-results
        path: backend/target/surefire-reports/

  # Job 2: 前端测试
  frontend-test:
    name: 前端测试
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 安装前端依赖
      run: |
        cd frontend
        npm ci
        
    - name: 前端代码检查
      run: |
        cd frontend
        npm run lint || echo "Lint warnings found"
        
    - name: 前端类型检查
      run: |
        cd frontend
        npm run type-check || echo "Type check warnings found"
        
    - name: 运行前端测试
      run: |
        cd frontend
        npm run test:ci
        
    - name: 上传覆盖率报告
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage

  # Job 3: 集成测试
  integration-test:
    name: 集成测试
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 启动后端服务
      run: |
        cd backend
        mvn spring-boot:run &
        sleep 30
        curl -f http://localhost:8080/actuator/health || exit 1
        
    - name: 构建前端
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: 运行端到端测试
      run: |
        cd frontend
        npm run test:e2e || echo "E2E tests need implementation"

  # Job 4: 代码质量检查
  code-quality:
    name: 代码质量检查
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # SonarCloud需要完整历史
        
    - name: 设置Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 缓存SonarCloud包
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: 运行SonarCloud分析
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd backend
        mvn clean verify sonar:sonar \
          -Dsonar.projectKey=sysml-mvp \
          -Dsonar.organization=your-org \
          -Dsonar.host.url=https://sonarcloud.io

  # Job 5: 安全扫描
  security-scan:
    name: 安全扫描
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 运行Trivy扫描
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 上传扫描结果到GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  # Job 6: 构建验证
  build-verification:
    name: 构建验证
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 构建后端JAR包
      run: |
        cd backend
        mvn clean package -DskipTests
        
    - name: 构建前端生产版本
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          backend/target/*.jar
          frontend/dist/